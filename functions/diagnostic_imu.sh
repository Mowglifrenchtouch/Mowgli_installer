#!/bin/bash

# diagnostic_imu.sh
# Diagnostic de l'IMU via la carte m√®re Mowgli connect√©e en USB

SCRIPT_NAME="Diagnostic IMU"
RESUME_FILE="/tmp/diagnostic_imu_resume.txt"
LOG_FILE="/tmp/diagnostic_imu_debug.log"

DATE_EXEC=$(date "+%d/%m/%Y %H:%M:%S")
echo "[üîç] $SCRIPT_NAME - D√©marrage..." | tee "$LOG_FILE"
echo "[üßæ] R√©sum√© du diagnostic :" > "$RESUME_FILE"
echo "üïí Date du test : $DATE_EXEC" >> "$RESUME_FILE"

# Compter les conteneurs Docker actifs
RUNNING_DOCKERS=$(docker ps -q | wc -l)
echo "üê≥ Conteneurs Docker actifs : $RUNNING_DOCKERS (doit √™tre > 0 pour la d√©tection de l'IMU)" >> "$RESUME_FILE"

if [ "$RUNNING_DOCKERS" -eq 0 ]; then
  echo "[‚ùå] Aucun conteneur Docker actif. L'IMU ne pourra pas √™tre d√©tect√©e." | tee -a "$RESUME_FILE" "$LOG_FILE"
  echo "[üí°] Veuillez lancer les conteneurs Docker avant de relancer ce test." | tee -a "$RESUME_FILE" "$LOG_FILE"
  echo -n "[‚ùì] Voulez-vous forcer le red√©marrage des conteneurs maintenant ? (o/N) : "
  read -r restart_choice
  if [[ "$restart_choice" =~ ^[OoYy]$ ]]; then
    echo "[üöÄ] Red√©marrage des conteneurs Docker..." | tee -a "$RESUME_FILE" "$LOG_FILE"
    docker compose down && docker compose up -d
    echo "[‚úÖ] Conteneurs relanc√©s avec succ√®s." | tee -a "$RESUME_FILE" "$LOG_FILE"
    docker ps --format "table {{.Names}}\t{{.Status}}" | tee -a "$RESUME_FILE" "$LOG_FILE"
    echo "[‚ÑπÔ∏è] Veuillez relancer le diagnostic maintenant que les services sont actifs."
  fi
  exit 1
fi

# V√©rification de la connexion USB de la carte m√®re
IMU_USB_PORT=$(ls /dev/ttyUSB* /dev/ttyACM* 2>/dev/null | head -n 1)
if [ -z "$IMU_USB_PORT" ]; then
  echo "[‚ùå] Aucun port USB pour la carte m√®re/IMU n'a √©t√© d√©tect√©." | tee -a "$RESUME_FILE" "$LOG_FILE"
  echo "[üí°] Assurez-vous que la carte m√®re est bien connect√©e en USB." | tee -a "$RESUME_FILE" "$LOG_FILE"
else
  echo "[üîå] Port d√©tect√© : $IMU_USB_PORT (USB vers carte m√®re YardForce/Mowgli)" | tee -a "$RESUME_FILE" "$LOG_FILE"
fi

# D√©tection automatique du chemin imu.sh
USER_HOME=$(getent passwd "$USER" | cut -d: -f6)
IMU_SCRIPT="$USER_HOME/mowgli-docker/utils/imu.sh"
if [ ! -f "$IMU_SCRIPT" ]; then
  echo "[‚ùå] Fichier imu.sh introuvable √† l'emplacement attendu : $IMU_SCRIPT" | tee -a "$RESUME_FILE" "$LOG_FILE"
  exit 1
fi

# Appel du script imu.sh et r√©cup√©ration des trames
IMU_OUTPUT=$(bash "$IMU_SCRIPT")
echo "$IMU_OUTPUT" | tee -a "$LOG_FILE"

# Identification de l'IMU
if echo "$IMU_OUTPUT" | grep -q "MPU-6050"; then
  IMU_NAME="MPU-6050"
elif echo "$IMU_OUTPUT" | grep -q "MPU-9250"; then
  IMU_NAME="MPU-9250"
elif echo "$IMU_OUTPUT" | grep -qi "bno085\|bno055"; then
  IMU_NAME="BNO0xx"
elif echo "$IMU_OUTPUT" | grep -qi "icm20948"; then
  IMU_NAME="ICM-20948"
else
  IMU_NAME="Non identifi√©"
fi

# V√©rifier si l'IMU est connect√©e
if [ "$IMU_NAME" != "Non identifi√©" ]; then
  echo "üîé IMU d√©tect√©e : $IMU_NAME (connect√©e)" | tee -a "$RESUME_FILE"
else
  echo "üîé IMU d√©tect√©e : $IMU_NAME" | tee -a "$RESUME_FILE"
fi

# R√©sum√© filtr√©
if echo "$IMU_OUTPUT" | grep -q "Trames"; then
  echo "[‚úîÔ∏è] Trames IMU d√©tect√©es avec succ√®s." >> "$RESUME_FILE"
else
  echo "[‚ö†Ô∏è] Aucune trame IMU claire d√©tect√©e." >> "$RESUME_FILE"
fi

# V√©rification de la pr√©sence de valeurs num√©riques utiles
if echo "$IMU_OUTPUT" | grep -Eo '[0-9]+\.[0-9]+' | awk '$1 > 0 { exit 0 } END { exit 1 }'; then
  echo "[‚úîÔ∏è] Donn√©es IMU valides : valeurs num√©riques sup√©rieures √† z√©ro d√©tect√©es." >> "$RESUME_FILE"
else
  echo "[‚ö†Ô∏è] Aucune valeur num√©rique exploitable trouv√©e (>= 0)." >> "$RESUME_FILE"
fi

echo "[‚úÖ] Diagnostic IMU termin√©. R√©sum√© disponible dans : $RESUME_FILE" | tee -a "$LOG_FILE"
